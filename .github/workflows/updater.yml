name: Updater

on:
  workflow_dispatch:
  push:
    branches:
    - main
    tags:
    - '*'
    # No path filters ensures we always have a docker image matching the latest commit on main
  pull_request:
    branches:
    # Only trigger for PRs against `main` branch.
    - main
    paths:
    - "updater/**"
    - ".github/workflows/updater.yml"
    - "!docs/**"

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        suite:
        - { ecosystem: bundler }
        - { ecosystem: cargo }
        - { ecosystem: composer }
        - { ecosystem: docker }
        - { ecosystem: elm }
        - { ecosystem: gitsubmodule }
        - { ecosystem: github-actions }
        - { ecosystem: gomod }
        - { ecosystem: gradle }
        - { ecosystem: mix }
        - { ecosystem: maven }
        - { ecosystem: npm }
        - { ecosystem: nuget }
        - { ecosystem: pub }
        - { ecosystem: pip }
        - { ecosystem: swift }
        - { ecosystem: terraform }

    env:
      IMAGE_NAME: 'dependabot-updater-${{ matrix.suite.ecosystem }}'
      DOCKER_BUILDKIT: 1 # Enable Docker BuildKit
      # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/updater/Gemfile

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for GitVersion

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: bundle exec rubocop
      run: bundle exec rubocop
      working-directory: updater

    - name: bundle exec rspec spec
      run: bundle exec rspec spec
      working-directory: updater

    - name: Pull Docker base image & warm Docker cache
      run: docker pull "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest"
      # TODO: remove this after at least one release tagged 'latest'
      continue-on-error: true

    - name: Build image
      run: |
        docker build \
        -f updater/Dockerfile \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg ECOSYSTEM=${{ matrix.suite.ecosystem }} \
        --label com.github.image.run.id=$GITHUB_RUN_ID \
        --label com.github.image.run.number=$GITHUB_RUN_NUMBER \
        --label com.github.image.job.id=$GITHUB_JOB \
        --label com.github.image.source.sha=$GITHUB_SHA \
        --label com.github.image.source.branch=$GITHUB_REF \
        -t "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest" \
        -t "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_SHORTSHA" \
        -t "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_NUGETVERSIONV2" \
        -t "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_MAJOR.$GITVERSION_MINOR" \
        -t "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_MAJOR" \
        --cache-from ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest \
        .

    - name: Log into registry
      if: ${{ (github.ref == 'refs/heads/main') || (!startsWith(github.ref, 'refs/pull')) || startsWith(github.ref, 'refs/tags') }}
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image (latest, ShortSha)
      if: ${{ (github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags') }}
      run: |
        docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest"
        docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_SHORTSHA"

    - name: Push image (NuGetVersionV2)
      if: "!startsWith(github.ref, 'refs/pull')"
      run: docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_NUGETVERSIONV2"

    - name: Push image (major, minor)
      if: startsWith(github.ref, 'refs/tags')
      run: |
        docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_MAJOR.$GITVERSION_MINOR"
        docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_MAJOR"
