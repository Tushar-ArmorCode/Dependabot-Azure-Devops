name: Docker

on:
  push:
    branches:
    - main
    tags:
    - '*'
    paths:
    - "updater/**"
    - "Dockerfile"
    - ".github/workflows/docker.yml"
    - "!docs/**"
  pull_request:
    branches:
    # Only trigger for PRs against `main` branch.
    - main
    paths:
    - "updater/**"
    - "Dockerfile"
    - ".github/workflows/docker.yml"
    - "!docs/**"

jobs:
  dockerize:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: 'dependabot-updater'
      DOCKER_BUILDKIT: 1 # Enable Docker BuildKit
      # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/updater/Gemfile

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Required for GitVersion

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: bundle exec rubocop
      run: bundle exec rubocop
      working-directory: updater

    - name: bundle exec rspec spec
      run: bundle exec rspec spec
      working-directory: updater

    - name: Pull Docker base image & warm Docker cache
      run: docker pull "ghcr.io/tinglesoftware/$IMAGE_NAME:latest"

    - name: Build image
      run: |
        docker build \
        -f Dockerfile \
        -t "ghcr.io/tinglesoftware/$IMAGE_NAME:latest" \
        -t "ghcr.io/tinglesoftware/$IMAGE_NAME:$GITVERSION_FULLSEMVER" \
        -t "ghcr.io/tinglesoftware/$IMAGE_NAME:$GITVERSION_MAJOR.$GITVERSION_MINOR" \
        -t "ghcr.io/tinglesoftware/$IMAGE_NAME:$GITVERSION_MAJOR" \
        --cache-from ghcr.io/tinglesoftware/$IMAGE_NAME:latest \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        .

    - name: Log into registry
      if: ${{ (github.ref == 'refs/heads/main') || (!startsWith(github.ref, 'refs/pull')) || startsWith(github.ref, 'refs/tags') }}
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image (latest)
      if: github.ref == 'refs/heads/main'
      run: docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest"

    - name: Push image (FullSemVer)
      if: "!startsWith(github.ref, 'refs/pull')"
      run: docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_FULLSEMVER"

    - name: Push image (major, minor)
      if: startsWith(github.ref, 'refs/tags')
      run: |
        docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_MAJOR.$GITVERSION_MINOR"
        docker push "ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$GITVERSION_MAJOR"
